// Code generated by MockGen. DO NOT EDIT.
// Source: bitbucket.org/optiisolutions/go-template-service/dao (interfaces: DataAccessObject)

// Package mock_dao is a generated GoMock package.
package mock_dao

import (
	config "bitbucket.org/optiisolutions/go-common/config"
	datamodels "bitbucket.org/optiisolutions/go-common/datamodels"
	db "bitbucket.org/optiisolutions/go-common/db"
	datamodels0 "bitbucket.org/optiisolutions/go-template-service/datamodels"
	gomock "github.com/golang/mock/gomock"
	url "net/url"
	reflect "reflect"
)

// MockDataAccessObject is a mock of DataAccessObject interface
type MockDataAccessObject struct {
	ctrl     *gomock.Controller
	recorder *MockDataAccessObjectMockRecorder
}

// MockDataAccessObjectMockRecorder is the mock recorder for MockDataAccessObject
type MockDataAccessObjectMockRecorder struct {
	mock *MockDataAccessObject
}

// NewMockDataAccessObject creates a new mock instance
func NewMockDataAccessObject(ctrl *gomock.Controller) *MockDataAccessObject {
	mock := &MockDataAccessObject{ctrl: ctrl}
	mock.recorder = &MockDataAccessObjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDataAccessObject) EXPECT() *MockDataAccessObjectMockRecorder {
	return m.recorder
}

// AddNewShard mocks base method
func (m *MockDataAccessObject) AddNewShard(arg0 *datamodels.Shard) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNewShard", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddNewShard indicates an expected call of AddNewShard
func (mr *MockDataAccessObjectMockRecorder) AddNewShard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNewShard", reflect.TypeOf((*MockDataAccessObject)(nil).AddNewShard), arg0)
}

// BeginTx mocks base method
func (m *MockDataAccessObject) BeginTx(arg0 ...int64) (db.Transaction, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "BeginTx", varargs...)
	ret0, _ := ret[0].(db.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BeginTx indicates an expected call of BeginTx
func (mr *MockDataAccessObjectMockRecorder) BeginTx(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginTx", reflect.TypeOf((*MockDataAccessObject)(nil).BeginTx), arg0...)
}

// CreateTemplate mocks base method
func (m *MockDataAccessObject) CreateTemplate(arg0 int64, arg1 *datamodels0.Template) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTemplate", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTemplate indicates an expected call of CreateTemplate
func (mr *MockDataAccessObjectMockRecorder) CreateTemplate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTemplate", reflect.TypeOf((*MockDataAccessObject)(nil).CreateTemplate), arg0, arg1)
}

// DeleteTemplateById mocks base method
func (m *MockDataAccessObject) DeleteTemplateById(arg0, arg1 int64) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTemplateById", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTemplateById indicates an expected call of DeleteTemplateById
func (mr *MockDataAccessObjectMockRecorder) DeleteTemplateById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTemplateById", reflect.TypeOf((*MockDataAccessObject)(nil).DeleteTemplateById), arg0, arg1)
}

// GetShardList mocks base method
func (m *MockDataAccessObject) GetShardList() ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShardList")
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShardList indicates an expected call of GetShardList
func (mr *MockDataAccessObjectMockRecorder) GetShardList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShardList", reflect.TypeOf((*MockDataAccessObject)(nil).GetShardList))
}

// GetShardName mocks base method
func (m *MockDataAccessObject) GetShardName(arg0 int64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShardName", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShardName indicates an expected call of GetShardName
func (mr *MockDataAccessObjectMockRecorder) GetShardName(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShardName", reflect.TypeOf((*MockDataAccessObject)(nil).GetShardName), arg0)
}

// GetTemplateById mocks base method
func (m *MockDataAccessObject) GetTemplateById(arg0, arg1 int64) (*datamodels0.Template, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTemplateById", arg0, arg1)
	ret0, _ := ret[0].(*datamodels0.Template)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetTemplateById indicates an expected call of GetTemplateById
func (mr *MockDataAccessObjectMockRecorder) GetTemplateById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemplateById", reflect.TypeOf((*MockDataAccessObject)(nil).GetTemplateById), arg0, arg1)
}

// Init mocks base method
func (m *MockDataAccessObject) Init(arg0 *config.DbParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init
func (mr *MockDataAccessObjectMockRecorder) Init(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockDataAccessObject)(nil).Init), arg0)
}

// InitCluster mocks base method
func (m *MockDataAccessObject) InitCluster() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitCluster")
	ret0, _ := ret[0].(error)
	return ret0
}

// InitCluster indicates an expected call of InitCluster
func (mr *MockDataAccessObjectMockRecorder) InitCluster() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitCluster", reflect.TypeOf((*MockDataAccessObject)(nil).InitCluster))
}

// ListTemplates mocks base method
func (m *MockDataAccessObject) ListTemplates(arg0 int64, arg1 url.Values) ([]datamodels0.Template, int, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTemplates", arg0, arg1)
	ret0, _ := ret[0].([]datamodels0.Template)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(bool)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// ListTemplates indicates an expected call of ListTemplates
func (mr *MockDataAccessObjectMockRecorder) ListTemplates(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTemplates", reflect.TypeOf((*MockDataAccessObject)(nil).ListTemplates), arg0, arg1)
}

// Migrate mocks base method
func (m *MockDataAccessObject) Migrate(arg0 string, arg1 ...int64) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Migrate", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Migrate indicates an expected call of Migrate
func (mr *MockDataAccessObjectMockRecorder) Migrate(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Migrate", reflect.TypeOf((*MockDataAccessObject)(nil).Migrate), varargs...)
}

// UpdateCluster mocks base method
func (m *MockDataAccessObject) UpdateCluster() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCluster")
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateCluster indicates an expected call of UpdateCluster
func (mr *MockDataAccessObjectMockRecorder) UpdateCluster() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCluster", reflect.TypeOf((*MockDataAccessObject)(nil).UpdateCluster))
}

// UpdateShardPropertyData mocks base method
func (m *MockDataAccessObject) UpdateShardPropertyData(arg0 *datamodels.Property) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateShardPropertyData", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateShardPropertyData indicates an expected call of UpdateShardPropertyData
func (mr *MockDataAccessObjectMockRecorder) UpdateShardPropertyData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateShardPropertyData", reflect.TypeOf((*MockDataAccessObject)(nil).UpdateShardPropertyData), arg0)
}

// UpdateTemplate mocks base method
func (m *MockDataAccessObject) UpdateTemplate(arg0 int64, arg1 *datamodels0.Template) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTemplate", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateTemplate indicates an expected call of UpdateTemplate
func (mr *MockDataAccessObjectMockRecorder) UpdateTemplate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTemplate", reflect.TypeOf((*MockDataAccessObject)(nil).UpdateTemplate), arg0, arg1)
}

// ValidateCluster mocks base method
func (m *MockDataAccessObject) ValidateCluster(arg0 int64) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCluster", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ValidateCluster indicates an expected call of ValidateCluster
func (mr *MockDataAccessObjectMockRecorder) ValidateCluster(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCluster", reflect.TypeOf((*MockDataAccessObject)(nil).ValidateCluster), arg0)
}
